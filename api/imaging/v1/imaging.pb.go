// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: api/imaging/v1/imaging.proto

package imagingpb

import (
	_ "github.com/Artistichek/imaging/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProcessResult int32

const (
	// Неизвестная ошибка.
	ProcessResult_PROCESS_RESULT_UNKNOWN ProcessResult = 0
	// Изображение обработано и загружено без ошибок.
	ProcessResult_OK ProcessResult = 1
	// Поврежденный файл (ошибка чтения файла).
	ProcessResult_CORRUPTED_IMAGE ProcessResult = 2
	// Получен файл в неправильном формате.
	ProcessResult_INVALID_IMAGE_FORMAT ProcessResult = 3
	// Недоступная ссылка.
	ProcessResult_IMAGE_URL_UNREACHABLE ProcessResult = 4
	// Изображение не предоставлено в задании.
	ProcessResult_IMAGE_NOT_PROVIDED ProcessResult = 5
	// Превышено ожидаемое время обработки изображения.
	ProcessResult_PROCESS_TIMEOUT_EXCEEDED ProcessResult = 6
	// Ошибка загрузки изображения в хранилище.
	ProcessResult_S3_IMAGE_UPLOAD_ERROR ProcessResult = 7
	// Превышено ожидаемое время загрузки в s3.
	ProcessResult_UPLOAD_TIMEOUT_EXCEEDED ProcessResult = 8
	// Внутренняя ошибка сервиса.
	ProcessResult_INTERNAL_ERROR ProcessResult = 9
)

// Enum value maps for ProcessResult.
var (
	ProcessResult_name = map[int32]string{
		0: "PROCESS_RESULT_UNKNOWN",
		1: "OK",
		2: "CORRUPTED_IMAGE",
		3: "INVALID_IMAGE_FORMAT",
		4: "IMAGE_URL_UNREACHABLE",
		5: "IMAGE_NOT_PROVIDED",
		6: "PROCESS_TIMEOUT_EXCEEDED",
		7: "S3_IMAGE_UPLOAD_ERROR",
		8: "UPLOAD_TIMEOUT_EXCEEDED",
		9: "INTERNAL_ERROR",
	}
	ProcessResult_value = map[string]int32{
		"PROCESS_RESULT_UNKNOWN":   0,
		"OK":                       1,
		"CORRUPTED_IMAGE":          2,
		"INVALID_IMAGE_FORMAT":     3,
		"IMAGE_URL_UNREACHABLE":    4,
		"IMAGE_NOT_PROVIDED":       5,
		"PROCESS_TIMEOUT_EXCEEDED": 6,
		"S3_IMAGE_UPLOAD_ERROR":    7,
		"UPLOAD_TIMEOUT_EXCEEDED":  8,
		"INTERNAL_ERROR":           9,
	}
)

func (x ProcessResult) Enum() *ProcessResult {
	p := new(ProcessResult)
	*p = x
	return p
}

func (x ProcessResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessResult) Descriptor() protoreflect.EnumDescriptor {
	return file_api_imaging_v1_imaging_proto_enumTypes[0].Descriptor()
}

func (ProcessResult) Type() protoreflect.EnumType {
	return &file_api_imaging_v1_imaging_proto_enumTypes[0]
}

func (x ProcessResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessResult.Descriptor instead.
func (ProcessResult) EnumDescriptor() ([]byte, []int) {
	return file_api_imaging_v1_imaging_proto_rawDescGZIP(), []int{0}
}

type ProcessImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор задания на обработку изображения.
	JobId int64 `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// Идентификатор игры, изображение которой необходимо обработать.
	GameId string `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	// Обложка игры.
	//
	// Types that are assignable to Image:
	//
	//	*ProcessImageRequest_Url
	//	*ProcessImageRequest_File
	Image isProcessImageRequest_Image `protobuf_oneof:"image"`
}

func (x *ProcessImageRequest) Reset() {
	*x = ProcessImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_imaging_v1_imaging_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessImageRequest) ProtoMessage() {}

func (x *ProcessImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_imaging_v1_imaging_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessImageRequest.ProtoReflect.Descriptor instead.
func (*ProcessImageRequest) Descriptor() ([]byte, []int) {
	return file_api_imaging_v1_imaging_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessImageRequest) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *ProcessImageRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (m *ProcessImageRequest) GetImage() isProcessImageRequest_Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (x *ProcessImageRequest) GetUrl() string {
	if x, ok := x.GetImage().(*ProcessImageRequest_Url); ok {
		return x.Url
	}
	return ""
}

func (x *ProcessImageRequest) GetFile() []byte {
	if x, ok := x.GetImage().(*ProcessImageRequest_File); ok {
		return x.File
	}
	return nil
}

type isProcessImageRequest_Image interface {
	isProcessImageRequest_Image()
}

type ProcessImageRequest_Url struct {
	// URL-адрес.
	Url string `protobuf:"bytes,3,opt,name=url,proto3,oneof"`
}

type ProcessImageRequest_File struct {
	// Представление в байтах.
	File []byte `protobuf:"bytes,4,opt,name=file,proto3,oneof"`
}

func (*ProcessImageRequest_Url) isProcessImageRequest_Image() {}

func (*ProcessImageRequest_File) isProcessImageRequest_Image() {}

type ProcessImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор задания на обработку изображения.
	JobId int64 `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// Идентификатор игры, изображение которой обрабатывали.
	GameId string `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	// Результат выполнения операции.
	Result ProcessResult `protobuf:"varint,3,opt,name=result,proto3,enum=api.imaging.v1.ProcessResult" json:"result,omitempty"`
	// Статус выполненения операции.
	Status *status.Status `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ProcessImageResponse) Reset() {
	*x = ProcessImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_imaging_v1_imaging_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessImageResponse) ProtoMessage() {}

func (x *ProcessImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_imaging_v1_imaging_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessImageResponse.ProtoReflect.Descriptor instead.
func (*ProcessImageResponse) Descriptor() ([]byte, []int) {
	return file_api_imaging_v1_imaging_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessImageResponse) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *ProcessImageResponse) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *ProcessImageResponse) GetResult() ProcessResult {
	if x != nil {
		return x.Result
	}
	return ProcessResult_PROCESS_RESULT_UNKNOWN
}

func (x *ProcessImageResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_api_imaging_v1_imaging_proto protoreflect.FileDescriptor

var file_api_imaging_v1_imaging_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31,
	0x2f, 0x69, 0x6d, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1b,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x04, 0xe2,
	0x41, 0x01, 0x02, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01,
	0x02, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x42, 0x0d, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x04, 0xea, 0x41,
	0x01, 0x02, 0x22, 0xa9, 0x01, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6a,
	0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0xff,
	0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x52, 0x45, 0x53, 0x55,
	0x4c, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02,
	0x4f, 0x4b, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x52, 0x52, 0x55, 0x50, 0x54, 0x45,
	0x44, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41,
	0x54, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x52, 0x4c,
	0x5f, 0x55, 0x4e, 0x52, 0x45, 0x41, 0x43, 0x48, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x04, 0x12, 0x16,
	0x0a, 0x12, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x56,
	0x49, 0x44, 0x45, 0x44, 0x10, 0x05, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53,
	0x53, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44,
	0x45, 0x44, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x33, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45,
	0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x07, 0x12,
	0x1b, 0x0a, 0x17, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55,
	0x54, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x08, 0x12, 0x12, 0x0a, 0x0e,
	0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x09,
	0x32, 0x6d, 0x0a, 0x0e, 0x49, 0x6d, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x5b, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6d,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x72,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x68, 0x65, 0x6b, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x69, 0x6d,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_imaging_v1_imaging_proto_rawDescOnce sync.Once
	file_api_imaging_v1_imaging_proto_rawDescData = file_api_imaging_v1_imaging_proto_rawDesc
)

func file_api_imaging_v1_imaging_proto_rawDescGZIP() []byte {
	file_api_imaging_v1_imaging_proto_rawDescOnce.Do(func() {
		file_api_imaging_v1_imaging_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_imaging_v1_imaging_proto_rawDescData)
	})
	return file_api_imaging_v1_imaging_proto_rawDescData
}

var file_api_imaging_v1_imaging_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_imaging_v1_imaging_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_api_imaging_v1_imaging_proto_goTypes = []any{
	(ProcessResult)(0),           // 0: api.imaging.v1.ProcessResult
	(*ProcessImageRequest)(nil),  // 1: api.imaging.v1.ProcessImageRequest
	(*ProcessImageResponse)(nil), // 2: api.imaging.v1.ProcessImageResponse
	(*status.Status)(nil),        // 3: google.rpc.Status
}
var file_api_imaging_v1_imaging_proto_depIdxs = []int32{
	0, // 0: api.imaging.v1.ProcessImageResponse.result:type_name -> api.imaging.v1.ProcessResult
	3, // 1: api.imaging.v1.ProcessImageResponse.status:type_name -> google.rpc.Status
	1, // 2: api.imaging.v1.ImagingService.ProcessImage:input_type -> api.imaging.v1.ProcessImageRequest
	2, // 3: api.imaging.v1.ImagingService.ProcessImage:output_type -> api.imaging.v1.ProcessImageResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_imaging_v1_imaging_proto_init() }
func file_api_imaging_v1_imaging_proto_init() {
	if File_api_imaging_v1_imaging_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_imaging_v1_imaging_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ProcessImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_imaging_v1_imaging_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ProcessImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_imaging_v1_imaging_proto_msgTypes[0].OneofWrappers = []any{
		(*ProcessImageRequest_Url)(nil),
		(*ProcessImageRequest_File)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_imaging_v1_imaging_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_imaging_v1_imaging_proto_goTypes,
		DependencyIndexes: file_api_imaging_v1_imaging_proto_depIdxs,
		EnumInfos:         file_api_imaging_v1_imaging_proto_enumTypes,
		MessageInfos:      file_api_imaging_v1_imaging_proto_msgTypes,
	}.Build()
	File_api_imaging_v1_imaging_proto = out.File
	file_api_imaging_v1_imaging_proto_rawDesc = nil
	file_api_imaging_v1_imaging_proto_goTypes = nil
	file_api_imaging_v1_imaging_proto_depIdxs = nil
}
