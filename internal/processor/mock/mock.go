// Code generated by MockGen. DO NOT EDIT.
// Source: internal/processor/processor.go

// Package mock_processor is a generated GoMock package.
package mock_processor

import (
	bytes "bytes"
	context "context"
	image "image"
	reflect "reflect"

	processor "github.com/Artistichek/imaging/internal/processor"
	gomock "github.com/golang/mock/gomock"
)

// MockImageProcessor is a mock of ImageProcessor interface.
type MockImageProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockImageProcessorMockRecorder
}

// MockImageProcessorMockRecorder is the mock recorder for MockImageProcessor.
type MockImageProcessorMockRecorder struct {
	mock *MockImageProcessor
}

// NewMockImageProcessor creates a new mock instance.
func NewMockImageProcessor(ctrl *gomock.Controller) *MockImageProcessor {
	mock := &MockImageProcessor{ctrl: ctrl}
	mock.recorder = &MockImageProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImageProcessor) EXPECT() *MockImageProcessorMockRecorder {
	return m.recorder
}

// Cfg mocks base method.
func (m *MockImageProcessor) Cfg() *processor.Config {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Cfg")
	ret0, _ := ret[0].(*processor.Config)
	return ret0
}

// Cfg indicates an expected call of Cfg.
func (mr *MockImageProcessorMockRecorder) Cfg() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Cfg", reflect.TypeOf((*MockImageProcessor)(nil).Cfg))
}

// ProcessImage mocks base method.
func (m *MockImageProcessor) ProcessImage(ctx context.Context, img image.Image) ([]bytes.Buffer, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessImage", ctx, img)
	ret0, _ := ret[0].([]bytes.Buffer)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ProcessImage indicates an expected call of ProcessImage.
func (mr *MockImageProcessorMockRecorder) ProcessImage(ctx, img interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessImage", reflect.TypeOf((*MockImageProcessor)(nil).ProcessImage), ctx, img)
}