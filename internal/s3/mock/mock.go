// Code generated by MockGen. DO NOT EDIT.
// Source: internal/s3/client.go

// Package mock_s3 is a generated GoMock package.
package mock_s3

import (
	context "context"
	reflect "reflect"

	s3 "github.com/Artistichek/imaging/internal/s3"
	types "github.com/Artistichek/imaging/internal/s3/types"
	gomock "github.com/golang/mock/gomock"
)

// MockAPIClient is a mock of APIClient interface.
type MockAPIClient struct {
	ctrl     *gomock.Controller
	recorder *MockAPIClientMockRecorder
}

// MockAPIClientMockRecorder is the mock recorder for MockAPIClient.
type MockAPIClientMockRecorder struct {
	mock *MockAPIClient
}

// NewMockAPIClient creates a new mock instance.
func NewMockAPIClient(ctrl *gomock.Controller) *MockAPIClient {
	mock := &MockAPIClient{ctrl: ctrl}
	mock.recorder = &MockAPIClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPIClient) EXPECT() *MockAPIClientMockRecorder {
	return m.recorder
}

// Cfg mocks base method.
func (m *MockAPIClient) Cfg() *s3.Config {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Cfg")
	ret0, _ := ret[0].(*s3.Config)
	return ret0
}

// Cfg indicates an expected call of Cfg.
func (mr *MockAPIClientMockRecorder) Cfg() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Cfg", reflect.TypeOf((*MockAPIClient)(nil).Cfg))
}

// DeleteImage mocks base method.
func (m *MockAPIClient) DeleteImage(ctx context.Context, object types.DeleteObjectInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteImage", ctx, object)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteImage indicates an expected call of DeleteImage.
func (mr *MockAPIClientMockRecorder) DeleteImage(ctx, object interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteImage", reflect.TypeOf((*MockAPIClient)(nil).DeleteImage), ctx, object)
}

// DeleteImages mocks base method.
func (m *MockAPIClient) DeleteImages(ctx context.Context, objects types.DeleteObjectsInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteImages", ctx, objects)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteImages indicates an expected call of DeleteImages.
func (mr *MockAPIClientMockRecorder) DeleteImages(ctx, objects interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteImages", reflect.TypeOf((*MockAPIClient)(nil).DeleteImages), ctx, objects)
}

// UploadImage mocks base method.
func (m *MockAPIClient) UploadImage(ctx context.Context, object types.PutObjectInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadImage", ctx, object)
	ret0, _ := ret[0].(error)
	return ret0
}

// UploadImage indicates an expected call of UploadImage.
func (mr *MockAPIClientMockRecorder) UploadImage(ctx, object interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadImage", reflect.TypeOf((*MockAPIClient)(nil).UploadImage), ctx, object)
}

// UploadImages mocks base method.
func (m *MockAPIClient) UploadImages(parentCtx context.Context, objects []types.PutObjectInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadImages", parentCtx, objects)
	ret0, _ := ret[0].(error)
	return ret0
}

// UploadImages indicates an expected call of UploadImages.
func (mr *MockAPIClientMockRecorder) UploadImages(parentCtx, objects interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadImages", reflect.TypeOf((*MockAPIClient)(nil).UploadImages), parentCtx, objects)
}